{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SACMC,EAAaC,SAASC,cAAc,SAMtCC,GAJUF,SAASC,cAAc,kBACxBD,SAASC,cAAc,iBACrBD,SAASC,cAAc,mBAEvB,MAEf,SAASE,EAAcC,EAAUC,GACf,IAAIC,SAAQ,SAACC,EAASC,GACpC,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEM,SAAAT,EAAUU,MAAAT,IAEpBG,EAAO,CAAEK,SAAAT,EAAUU,MAAAT,MAEpBA,MAGFU,MAAK,SAAAC,G,IAAGC,EAAQD,EAARH,SAAUK,EAAKF,EAALF,MAEjBK,EAAAtB,GAASuB,OAAOC,QAAQ,qBAAoCC,OAAfL,EAAS,QAAYK,OAANJ,EAAM,UAEnEK,OAAM,SAAAP,G,IAAGQ,EAAQR,EAARH,SAAUY,EAAKT,EAALF,MAElBK,EAAAtB,GAASuB,OAAOM,QAAQ,oBAAmCJ,OAAfE,EAAS,QAAYF,OAANG,EAAM,UAIvE1B,EAAW4B,iBAAiB,UAE5B,SAAuBC,GACrBA,EAAEC,iBAIF,IAFA,IAAgCC,EAAAF,EAAEG,OAAOC,SAAjCC,EAAwBH,EAAxBhB,MAAOoB,EAAiBJ,EAAjBK,KAAMC,EAAWN,EAAXO,OAEZC,EAAI,EAAGA,GAAKF,EAAOG,MAAOD,GAAK,EACtCpC,GAAY,EACZ+B,EAAMM,MAAQC,OAAON,EAAKK,OAASC,OAAOP,EAAMM,OAChDpC,EAAcD,EAAU+B,EAAMM,OAEhCE,QAAQC,QACRxC,EAAW,EACX0B,EAAEG,OAAOY,W","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nconst formSubmit = document.querySelector('.form');\n\nconst delay = document.querySelector('[name=\"delay\"]');\nconst step = document.querySelector('[name=\"step\"]');\nconst amount = document.querySelector('[name=\"amount\"]');\n\nlet position = null;\n\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n  promise\n    .then(({ position, delay }) => {\n      // console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      // console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n    });\n}\n\nformSubmit.addEventListener('submit', onClickSubmit);\n\nfunction onClickSubmit(e) {\n  e.preventDefault();\n\n  const { delay, step, amount } = e.target.elements;\n\n  for (let i = 1; i <= amount.value; i += 1) {\n    position += 1;\n    delay.value = Number(step.value) + Number(delay.value);\n    createPromise(position, delay.value);\n  }\n  console.clear();\n  position = 0;\n  e.target.reset();\n}\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$formSubmit","document","querySelector","$ce04d3a99e08e73b$var$position","$ce04d3a99e08e73b$var$createPromise","position1","delay1","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","position","delay","then","param","position2","delay2","$parcel$interopDefault","Notify","success","concat","catch","position3","delay3","failure","addEventListener","e","preventDefault","_elements","target","elements","delay4","step1","step","amount1","amount","i","value","Number","console","clear","reset"],"version":3,"file":"03-promises.364a4f9f.js.map"}